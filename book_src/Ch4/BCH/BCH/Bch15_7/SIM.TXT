
Help text file for bch.exe program that generate binary (n,k) BCH code.

bch.exe program uses following input files:
bch.in - to specify input parameters of bch code, only this file 
	should be changed
bch.dat - data needed to generate enc.vhd and sym.vhd files
bch1.dat - data needed to generate dec.vhd if t (no. of erroers) = 1
bch2.dat - data needed to generate dec.vhd if t = 2
bch3.dat - data needed to generate dec.vhd if t > 2
bchs.dat - data needed to generate sym.cmd and sym.cme

bch.exe generate (overwrite !!!) following files:
const.vhd - vhdl package file that contains useful constant
enc.vhd - vhdl file generating bch code encoder
dec.vhd - vhdl file generating bch code decoder
sim.vhd - vhdl file generating file for simulation encoder and decoder
sim.cmd - command file for simulation before synthesis
sim.cme - command file for simulation after synthesis

bch.in file should consists of following:
m= xx - specify width of Galois Field GF(2^m), n=2^m-1
t= xx - specify number of erroers to be may corrected

program option (placed in bch.in):
-oxx - for t>2 circuit option;
	xx = 2 - parallel archtecture
	xx = 3 - serial archtecture - prefered.
-sxx - generate sym.cmd and sym.cme with specified 
	by xx simulation cicle; simulation time ~ xx*n*interleave
	xx=0 - do not generate simulation command files.
-ixx - xx - interleave number. The frequency of Berklacamp-Massey 
	Algorithm and data transfer (syndrome calculation) freqency.
	f_BMA = interleave * f_syn
+(-)m - with '+' or without '-' design optimisation. 



There are following BCH codes for m= 4 and t<=2. (n,k,t)
(15, 11, 1) 	(15, 7, 2) 	



	---------------- ENCODER----------------

ering - LFSR Linear Feedback Shift Registers
		Reg= 8		XOR= 3
ecount - counter (control system)
		Reg= 5		XOR= 1
ENCODER --
		Reg= 1		XOR= 0
	total	Reg= 14		XOR= 4




	-------------- DECODER ---------------

ffce - flip flop register
		Reg= 1		XOR= 0
dcount - counter - control system
		Reg= 4		XOR= 1
dbuf - buffor for data to be corrected
		Reg= 6		XOR= 1

----SYNDROMS----
dsyn1 - syndromes  1
		Reg= 4		XOR= 2
dsyn3 - syndromes  3
		Reg= 4		XOR= 4
SYNDROMES -- total
	total	Reg= 8		XOR= 6

---- Chien search ----
dpow3 - dout<= din^3
		Reg= 0		XOR= 13
dcheq - comparation dout<= din^3
		Reg= 0		XOR= 4
	total	Reg= 0		XOR= 17
dch1 - Chien Search for x^1
		Reg= 4		XOR= 1
dch3 - Chien Search for x^3
		Reg= 4		XOR= 3
CHIEN SEARCH - total including dcheq
	total	Reg= 8		XOR= 21

------ DECODER ------
	total	Reg= 27		XOR= 29



GF(2^4) generated by polynomial: 1 + x^1 + x^4
  no.  Standard    Dual basis
   -   0000     0000
   0   1000     0000
   1   0100     0000
   2   0010     0000
   3   0001     0000
   4   1100     0000
   5   0110     0000
   6   0011     0000
   7   1101     0000
   8   1010     0000
   9   0101     0000
  10   1110     0000
  11   0111     0000
  12   1111     0000
  13   1011     0000
  14   1001     0000
  15   1000     0000